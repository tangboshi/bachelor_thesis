#!/bin/bash

# These are the default options IF NOT OVERWRITTEN by a job file!
#********************************* options ************************************
debug_mode=1
## path and remote options
#remote options
remote_measurement=1
remote_ip=134.130.223.151
remote_flags=YC4
remote_user=inets
remote_to_mount_path=/home/$remote_user
remote_measurement_mount_point=/home/$USER/mnt/$remote_ip

# other paths
if [ $remote_measurement -eq 1 ]; then
  this_path=$remote_measurement_mount_point
  else
    this_path=$( cd $(dirname $0) ; pwd -P )
fi

if [ $debug_mode -eq 1 ]; then
  mkdir -p $this_path/debug
  this_path=$this_path/debug
fi

echo "this_path is: "$this_path"."

if [ $remote_measurement -eq 1 ]; then
  locate_base_path=$remote_measurement_mount_point/source/gr-inets/examples
else
  #locate_base_path=$this_path
  locate_base_path=/home/inets/source/gr-inets/examples/Tests
fi

jobs_open_path=$this_path/jobs_open_2
jobs_done_path=$this_path/jobs_done_2
plot_py_path=$this_path/py
log_path=$this_path/logs
export plot_directory_path=$this_path/plots
export data_source_path=$this_path/data

if [ $debug_mode -eq 1 ]; then
  # needed because in case of debug mode this_path=$this_path/debug
  plot_py_path=$( cd $(dirname $0) ; pwd -P )/py
fi

if [ $remote_measurement -eq 1 ]; then
  measurement_script_path=$locate_base_path/Tests
  export raw_data_source_path=$remote_measurement_mount_point/source/gr-inets/results
else
  measurement_script_path=$locate_base_path
    #measurement_script_path=$locate_base_path/py/fake_measurements
  #export raw_data_source_path=$measurement_script_path/measurement_raw
    export raw_data_source_path=/home/inets/source/gr-inets/results
fi

## premature death checks
check_if_prematurely_aborted=0
plot_if_prematurely_aborted=0
## python version
plot_python_version=3
measurement_python_version=2
os=ubuntu

case $os in
  "arch")
    if    [ $measurement_python_version -eq 2 ]; then measure_py=python2;
    elif  [ $measurement_python_version -eq 3 ]; then measuere_py=python; fi
    if    [ $plot_python_version -eq 2 ]; then plot_py=python2;
    elif  [ $plot_python_version -eq 3 ]; then plot_py=python; fi
  ;;

  "ubuntu")
    if    [ $measurement_python_version -eq 2 ]; then measuere_py=python;
    elif  [ $measurement_python_version -eq 3 ]; then measuere_py=python3; fi
    if    [ $plot_python_version -eq 2 ]; then plot_py=python;
    elif  [ $plot_python_version -eq 3 ]; then plot_py=python3; fi
  ;;
esac

#********************* important measurement variables ************************
## series options (!most important variables here)
export link=2
timer=1
export measurement_repetitions=5
measurement_scripts=( measure.py )
measurement_output_files=( t1dq.txt t1cs.txt t2rxe.txt t2e.txt )
export measurement_output_files=${measurement_output_files[*]}
plot_scripts=( cdf.py )
## plot options
plot_enabled=1
export plot_save_enabled=1
# the name of the saved files
export plot_names_trunk=untitled
#******************************************************************************
#    set this to 0 if you want to carry out multiple measurements in a row!   *
#******************************************************************************
export show_plot_after_measurement=1
export move_after_job_done=0
export packet_size=1000 #bytes
#*****************************************************************************#
