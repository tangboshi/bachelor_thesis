\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZlt{}?xml version=\PYGZdq{}1.0\PYGZdq{}?\PYGZgt{}}
\PYG{n+nt}{\PYGZlt{}block\PYGZgt{}}
	\PYG{n+nt}{\PYGZlt{}name\PYGZgt{}}block\PYGZus{}name\PYG{n+nt}{\PYGZlt{}/name\PYGZgt{}}
	\PYG{n+nt}{\PYGZlt{}key\PYGZgt{}}module\PYGZus{}name\PYGZus{}block\PYGZus{}name\PYG{n+nt}{\PYGZlt{}/key\PYGZgt{}}
	\PYG{n+nt}{\PYGZlt{}category\PYGZgt{}}[module\PYGZus{}name]\PYG{n+nt}{\PYGZlt{}/category\PYGZgt{}}
	\PYG{n+nt}{\PYGZlt{}import\PYGZgt{}}import module\PYGZus{}name\PYG{n+nt}{\PYGZlt{}/import\PYGZgt{}}
	\PYG{n+nt}{\PYGZlt{}make\PYGZgt{}}module\PYGZus{}name.block\PYGZus{}name(\PYGZdl{}arg1, \PYGZdl{}arg2)\PYG{n+nt}{\PYGZlt{}/make\PYGZgt{}}
	\PYG{c}{\PYGZlt{}!\PYGZhy{}\PYGZhy{} Make one \PYGZsq{}param\PYGZsq{} node for every Parameter you want settable from the GUI.}
\PYG{c}{	Sub\PYGZhy{}nodes:}
\PYG{c}{	* name}
\PYG{c}{	* key (makes the value accessible as \PYGZdl{}keyname, e.g. in the make node)}
\PYG{c}{	* type \PYGZhy{}\PYGZhy{}\PYGZgt{}}
	\PYG{n+nt}{\PYGZlt{}param\PYGZgt{}}
		\PYG{n+nt}{\PYGZlt{}name\PYGZgt{}}arg1 name string\PYG{n+nt}{\PYGZlt{}/name\PYGZgt{}}
		\PYG{n+nt}{\PYGZlt{}key\PYGZgt{}}arg1\PYG{n+nt}{\PYGZlt{}/key\PYGZgt{}}
		\PYG{n+nt}{\PYGZlt{}type\PYGZgt{}}bool\PYG{n+nt}{\PYGZlt{}/type\PYGZgt{}}
		\PYG{n+nt}{\PYGZlt{}option\PYGZgt{}}
			\PYG{n+nt}{\PYGZlt{}name\PYGZgt{}}yep.\PYG{n+nt}{\PYGZlt{}/name\PYGZgt{}}
			\PYG{n+nt}{\PYGZlt{}value\PYGZgt{}}True\PYG{n+nt}{\PYGZlt{}/value\PYGZgt{}}
		\PYG{n+nt}{\PYGZlt{}/option\PYGZgt{}}
		\PYG{n+nt}{\PYGZlt{}option\PYGZgt{}}
			\PYG{n+nt}{\PYGZlt{}name\PYGZgt{}}nope.\PYG{n+nt}{\PYGZlt{}/name\PYGZgt{}}
			\PYG{n+nt}{\PYGZlt{}value\PYGZgt{}}False\PYG{n+nt}{\PYGZlt{}/value\PYGZgt{}}
		\PYG{n+nt}{\PYGZlt{}/option\PYGZgt{}}
	\PYG{n+nt}{\PYGZlt{}/param\PYGZgt{}}

	\PYG{c}{\PYGZlt{}!\PYGZhy{}\PYGZhy{} Make one \PYGZsq{}sink\PYGZsq{} node per input. Sub\PYGZhy{}nodes:}
\PYG{c}{	* name (an identifier for the GUI)}
\PYG{c}{	* type}
\PYG{c}{	* vlen \PYGZhy{}\PYGZhy{}\PYGZhy{} vector length}
\PYG{c}{	* optional (set to 1 for optional inputs) \PYGZhy{}\PYGZhy{}\PYGZgt{}}
	\PYG{n+nt}{\PYGZlt{}sink\PYGZgt{}}
		\PYG{n+nt}{\PYGZlt{}name\PYGZgt{}}in\PYG{n+nt}{\PYGZlt{}/name\PYGZgt{}}
		\PYG{n+nt}{\PYGZlt{}type\PYGZgt{}}byte\PYG{n+nt}{\PYGZlt{}/type\PYGZgt{}}
	\PYG{n+nt}{\PYGZlt{}/sink\PYGZgt{}}

	\PYG{c}{\PYGZlt{}!\PYGZhy{}\PYGZhy{} Make one \PYGZsq{}source\PYGZsq{} node per output. Sub\PYGZhy{}nodes:}
\PYG{c}{	* name (an identifier for the GUI)}
\PYG{c}{	* type}
\PYG{c}{	* vlen}
\PYG{c}{	* optional (set to 1 for optional inputs) \PYGZhy{}\PYGZhy{}\PYGZgt{}}
	\PYG{n+nt}{\PYGZlt{}source\PYGZgt{}}
		\PYG{n+nt}{\PYGZlt{}name\PYGZgt{}}out\PYG{n+nt}{\PYGZlt{}/name\PYGZgt{}}
		\PYG{n+nt}{\PYGZlt{}type\PYGZgt{}}complex\PYG{n+nt}{\PYGZlt{}/type\PYGZgt{}}
	\PYG{n+nt}{\PYGZlt{}/source\PYGZgt{}}
\PYG{n+nt}{\PYGZlt{}/block\PYGZgt{}}
\end{Verbatim}
